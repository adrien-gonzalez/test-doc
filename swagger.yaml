openapi: 3.0.0
info:
  title: ServTop
  version: '0.1'
servers:
  - url: 'https://nicolas-camilloni.students-laplateforme.io/api'
    description: Notre API serveur
paths:
  /auth:
    post:
      tags:
        - User
      description: Permet de se connecter et créer un token
      operationId: 'App\Controllers\Auth::create'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                login:
                  type: string
                password:
                  type: string
              type: object
      responses:
        '200':
          description: 'True'
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Erreur login / password
          content:
            application/json:
              schema:
                type: object
  /comment:
    post:
      tags:
        - Serveur
      description: Commenter un serveur
      operationId: 'App\Controllers\CommentController::postComment'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                comment:
                  type: string
                score:
                  type: integer
                servers_fk:
                  type: integer
              type: object
      responses:
        '200':
          description: Commentaire envoyé
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Vous avez déjà posté un commentaire pour ce serveur
          content:
            application/json:
              schema:
                type: object
      security:
        - bearerAuth: []
  '/games?popular={num}':
    get:
      tags:
        - Game
      description: Liste des jeux les plus populaires
      parameters:
        - name: num
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Liste des jeux les plus populaires
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Page not found
          content:
            application/json:
              schema:
                type: object
  /games:
    get:
      tags:
        - Game
      description: Liste des jeux
      operationId: 'App\Controllers\GameController::getGames'
      responses:
        '200':
          description: Liste des jeux
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Page not found
          content:
            application/json:
              schema:
                type: object
  /resetpassword:
    put:
      tags:
        - ResetPassword
      description: modifie le mot de passe de l'utilisateur qui a fait la demande
      operationId: 'App\Controllers\PasswordController::putPassword'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                password:
                  type: string
                conf_password:
                  type: string
                token:
                  type: string
                id:
                  type: string
              type: object
      responses:
        '200':
          description: Mot de passe réinitialisé
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Erreur champs
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - ResetPassword
      description: ' Vérifie l''email renseigné et envoie le lien de modification du mdp'
      operationId: 'App\Controllers\PasswordController::SendMail'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                email:
                  type: string
              type: object
      responses:
        '200':
          description: Serveur créé !
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Des champs sont vides
          content:
            application/json:
              schema:
                type: object
  '/resetpassword?token={token}':
    get:
      tags:
        - ResetPassword
      description: Vérifie si le token utilisé est toujours valide
      operationId: 'App\Controllers\PasswordController::getToken'
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Informations de l'utilisateur possedant ce token
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Erreur Token
          content:
            application/json:
              schema:
                type: object
  '/servers?id={id}':
    get:
      tags:
        - Serveur
      description: Détail d'un serveur
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Détail du serveur
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Page not found (serveur non trouvé)
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Serveur
      description: Modifier les détails d'un serveur
      operationId: 'App\Controllers\ServerController::updateServer'
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name_server:
                  type: string
                description:
                  type: string
                miniature:
                  type: string
                port:
                  type: string
                website:
                  type: string
                ip:
                  type: string
                discord:
                  type: string
                image_servers:
                  type: string
              type: object
      responses:
        '200':
          description: 'True'
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Des champs sont vides
          content:
            application/json:
              schema:
                type: object
      security:
        - bearerAuth: []
    delete:
      tags:
        - Serveur
      description: Supprimer un serveur
      operationId: 'App\Controllers\ServerController::deleteServer'
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'True'
          content:
            application/json:
              schema:
                type: object
      security:
        - bearerAuth: []
  '/servers?game={id}':
    get:
      tags:
        - Serveur
      description: Liste les serveurs en fonction du jeu
      operationId: 'App\Controllers\ServerController::getServers'
      parameters:
        - name: game
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Liste des serveurs
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Page not found (jeu non trouvé)
          content:
            application/json:
              schema:
                type: object
  /servers:
    post:
      tags:
        - Serveur
      description: Créer un serveur
      operationId: 'App\Controllers\ServerController::postServer'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name_server:
                  type: string
                description:
                  type: string
                miniature:
                  type: string
                port:
                  type: string
                website:
                  type: string
                ip:
                  type: string
                discord:
                  type: string
                image_servers:
                  type: string
              type: object
      responses:
        '200':
          description: 'True'
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Des champs sont vides
          content:
            application/json:
              schema:
                type: object
      security:
        - bearerAuth: []
  '/tags?game={id}':
    get:
      tags:
        - Game
      description: Liste les tags d'un jeu
      parameters:
        - name: game
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Liste des tags du jeu
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Page not found
          content:
            application/json:
              schema:
                type: object
  '/tags?serveur_id={id}':
    get:
      tags:
        - Serveur
      description: Liste des tags d'un serveur
      operationId: 'App\Controllers\TagController::getTags'
      parameters:
        - name: serveur_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Liste des tags du serveur
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Page not found
          content:
            application/json:
              schema:
                type: object
  '/users?id={id}':
    get:
      tags:
        - User
      description: Informations de l'utilisateur connect�
      operationId: 'App\Controllers\UserController::getUser'
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Informations de l'utilisateur
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Utilisateur non connect�
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - User
      description: Supprime un utilisateur
      operationId: 'App\Controllers\UserController::deleteUser'
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'True'
          content:
            application/json:
              schema:
                type: object
      security:
        - bearerAuth: []
  /users:
    put:
      tags:
        - User
      description: Modifie les détails d'un utilisateur un champ à la fois.
      operationId: 'App\Controllers\UserController::updateUser'
      requestBody:
        description: Modifiez un champ à la fois. Password et old_password vont de paire.
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                login:
                  type: string
                email:
                  type: string
                old_password:
                  type: string
                password:
                  type: string
              type: object
      responses:
        '200':
          description: 'True'
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Erreur
          content:
            application/json:
              schema:
                type: object
      security:
        - bearerAuth: []
    post:
      tags:
        - User
      description: Créer un utilisateur (Inscription)
      operationId: 'App\Controllers\UserController::postUser'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                login:
                  type: string
                email:
                  type: string
                password:
                  type: string
                cpassword:
                  type: string
              type: object
      responses:
        '200':
          description: 'True'
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Erreurs champs
          content:
            application/json:
              schema:
                type: object
components:
  securitySchemes:
    bearerAuth:
      type: http
      bearerFormat: JWT
      scheme: bearer
tags:
  - name: Serveur
    description: Requête concernant les serveurs
  - name: ResetPassword
    description: Requête concernant la réinitialisation du mot de passe
  - name: Game
    description: Requête concernant les jeux
  - name: User
    description: Requête concernant les utilisateurs
